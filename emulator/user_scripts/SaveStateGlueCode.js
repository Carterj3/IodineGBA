
/** All of the "Leaf" values that are unique for Iodine. */
const uniqueStateKeys = [
    "clockCyclesSinceStart",
    "clocksPerMilliSecond",
    "clocksPerSecond",
    "CPUCyclesPerIteration",
    "CPUCyclesTotal",
    "dynamicSpeedRefresh",
    "emulatorStatus",
    "IOCore.accumulatedClocks",
    "IOCore.ARM.decode",
    "IOCore.ARM.execute",
    "IOCore.ARM.fetch",
    "IOCore.ARM.registers",
    "IOCore.ARM.registersUSR",
    "IOCore.cartridge.EEPROMStart",
    "IOCore.cartridge.flash_is128",
    "IOCore.cartridge.flash_isAtmel",
    "IOCore.cartridge.name",
    "IOCore.cpu.modeFlags",
    "IOCore.cpu.mul64ResultHigh",
    "IOCore.cpu.mul64ResultLow",
    "IOCore.cpu.registersABT",
    "IOCore.cpu.registersFIQ",
    "IOCore.cpu.registersIRQ",
    "IOCore.cpu.registersSVC",
    "IOCore.cpu.registersUND",
    "IOCore.cpu.SPSR",
    "IOCore.cpu.triggeredIRQ",
    "IOCore.cyclesOveriteratedPreviously",
    "IOCore.cyclesToIterate",
    "IOCore.dma.currentMatch",
    "IOCore.dma.fetch",
    "IOCore.dmaChannel0.destination",
    "IOCore.dmaChannel0.destinationControl",
    "IOCore.dmaChannel0.destinationShadow",
    "IOCore.dmaChannel0.dmaType",
    "IOCore.dmaChannel0.enabled",
    "IOCore.dmaChannel0.irqFlagging",
    "IOCore.dmaChannel0.is32Bit",
    "IOCore.dmaChannel0.pending",
    "IOCore.dmaChannel0.repeat",
    "IOCore.dmaChannel0.source",
    "IOCore.dmaChannel0.sourceControl",
    "IOCore.dmaChannel0.sourceShadow",
    "IOCore.dmaChannel0.wordCount",
    "IOCore.dmaChannel0.wordCountShadow",
    "IOCore.dmaChannel1.destination",
    "IOCore.dmaChannel1.destinationShadow",
    "IOCore.dmaChannel1.dmaType",
    "IOCore.dmaChannel1.enabled",
    "IOCore.dmaChannel1.is32Bit",
    "IOCore.dmaChannel1.repeat",
    "IOCore.dmaChannel1.source",
    "IOCore.dmaChannel1.sourceShadow",
    "IOCore.dmaChannel1.wordCount",
    "IOCore.dmaChannel1.wordCountShadow",
    "IOCore.dmaChannel2.destination",
    "IOCore.dmaChannel2.destinationShadow",
    "IOCore.dmaChannel2.enabled",
    "IOCore.dmaChannel2.source",
    "IOCore.dmaChannel2.sourceShadow",
    "IOCore.dmaChannel3.destination",
    "IOCore.dmaChannel3.destinationShadow",
    "IOCore.dmaChannel3.displaySyncEnableDelay",
    "IOCore.dmaChannel3.gamePakDMA",
    "IOCore.dmaChannel3.source",
    "IOCore.dmaChannel3.sourceControl",
    "IOCore.dmaChannel3.sourceShadow",
    "IOCore.dmaChannel3.wordCount",
    "IOCore.gfxRenderer.IOData16",
    "IOCore.gfxRenderer.IOData32",
    "IOCore.gfxRenderer.IOData8",
    "IOCore.gfxRenderer.renderer.backdrop",
    "IOCore.gfxRenderer.renderer.bg0Renderer.BGCharacterBaseBlock",
    "IOCore.gfxRenderer.renderer.bg0Renderer.BGLayer",
    "IOCore.gfxRenderer.renderer.bg0Renderer.BGScreenBaseBlock",
    "IOCore.gfxRenderer.renderer.bg0Renderer.BGXCoord",
    "IOCore.gfxRenderer.renderer.bg0Renderer.BGYCoord",
    "IOCore.gfxRenderer.renderer.bg0Renderer.do256",
    "IOCore.gfxRenderer.renderer.bg0Renderer.doMosaic",
    "IOCore.gfxRenderer.renderer.bg0Renderer.offset",
    "IOCore.gfxRenderer.renderer.bg0Renderer.priorityFlag",
    "IOCore.gfxRenderer.renderer.bg0Renderer.scratchBuffer",
    "IOCore.gfxRenderer.renderer.bg0Renderer.tileFetched",
    "IOCore.gfxRenderer.renderer.bg0Renderer.tileMode",
    "IOCore.gfxRenderer.renderer.bg1Renderer.BGLayer",
    "IOCore.gfxRenderer.renderer.bg1Renderer.BGScreenBaseBlock",
    "IOCore.gfxRenderer.renderer.bg1Renderer.BGXCoord",
    "IOCore.gfxRenderer.renderer.bg1Renderer.BGYCoord",
    "IOCore.gfxRenderer.renderer.bg1Renderer.offset",
    "IOCore.gfxRenderer.renderer.bg1Renderer.priorityFlag",
    "IOCore.gfxRenderer.renderer.bg1Renderer.scratchBuffer",
    "IOCore.gfxRenderer.renderer.bg1Renderer.tileFetched",
    "IOCore.gfxRenderer.renderer.bg2FrameBufferRenderer.frameSelect",
    "IOCore.gfxRenderer.renderer.bg2MatrixRenderer.BGCharacterBaseBlock",
    "IOCore.gfxRenderer.renderer.bg2MatrixRenderer.BGDisplayOverflow",
    "IOCore.gfxRenderer.renderer.bg2MatrixRenderer.BGScreenBaseBlock",
    "IOCore.gfxRenderer.renderer.bg2MatrixRenderer.mapSize",
    "IOCore.gfxRenderer.renderer.bg2MatrixRenderer.mapSizeComparer",
    "IOCore.gfxRenderer.renderer.bg2MatrixRenderer.palette",
    "IOCore.gfxRenderer.renderer.bg2TextRenderer.BGCharacterBaseBlock",
    "IOCore.gfxRenderer.renderer.bg2TextRenderer.BGLayer",
    "IOCore.gfxRenderer.renderer.bg2TextRenderer.BGScreenBaseBlock",
    "IOCore.gfxRenderer.renderer.bg2TextRenderer.BGYCoord",
    "IOCore.gfxRenderer.renderer.bg2TextRenderer.offset",
    "IOCore.gfxRenderer.renderer.bg2TextRenderer.priorityFlag",
    "IOCore.gfxRenderer.renderer.bg2TextRenderer.scratchBuffer",
    "IOCore.gfxRenderer.renderer.bg2TextRenderer.tileFetched",
    "IOCore.gfxRenderer.renderer.bg2TextRenderer.tileMode",
    "IOCore.gfxRenderer.renderer.bg3MatrixRenderer.BGScreenBaseBlock",
    "IOCore.gfxRenderer.renderer.bg3MatrixRenderer.mapSize",
    "IOCore.gfxRenderer.renderer.bg3MatrixRenderer.mapSizeComparer",
    "IOCore.gfxRenderer.renderer.bg3TextRenderer.BGLayer",
    "IOCore.gfxRenderer.renderer.bg3TextRenderer.BGScreenBaseBlock",
    "IOCore.gfxRenderer.renderer.bg3TextRenderer.offset",
    "IOCore.gfxRenderer.renderer.bg3TextRenderer.priorityFlag",
    "IOCore.gfxRenderer.renderer.bg3TextRenderer.scratchBuffer",
    "IOCore.gfxRenderer.renderer.bg3TextRenderer.tileFetched",
    "IOCore.gfxRenderer.renderer.bgAffineRenderer0.BGdmx",
    "IOCore.gfxRenderer.renderer.bgAffineRenderer0.BGdmy",
    "IOCore.gfxRenderer.renderer.bgAffineRenderer0.BGdx",
    "IOCore.gfxRenderer.renderer.bgAffineRenderer0.BGdy",
    "IOCore.gfxRenderer.renderer.bgAffineRenderer0.BGReferenceX",
    "IOCore.gfxRenderer.renderer.bgAffineRenderer0.BGReferenceY",
    "IOCore.gfxRenderer.renderer.bgAffineRenderer0.pb",
    "IOCore.gfxRenderer.renderer.bgAffineRenderer0.pd",
    "IOCore.gfxRenderer.renderer.bgAffineRenderer0.scratchBuffer",
    "IOCore.gfxRenderer.renderer.bgAffineRenderer1.BGdmy",
    "IOCore.gfxRenderer.renderer.bgAffineRenderer1.BGdx",
    "IOCore.gfxRenderer.renderer.bgAffineRenderer1.BGReferenceX",
    "IOCore.gfxRenderer.renderer.bgAffineRenderer1.BGReferenceY",
    "IOCore.gfxRenderer.renderer.bgAffineRenderer1.pb",
    "IOCore.gfxRenderer.renderer.bgAffineRenderer1.pd",
    "IOCore.gfxRenderer.renderer.bgAffineRenderer1.scratchBuffer",
    "IOCore.gfxRenderer.renderer.buffer",
    "IOCore.gfxRenderer.renderer.colorEffectsRenderer.alphaBlendAmountTarget1",
    "IOCore.gfxRenderer.renderer.colorEffectsRenderer.alphaBlendAmountTarget2",
    "IOCore.gfxRenderer.renderer.colorEffectsRenderer.brightnessEffectAmount",
    "IOCore.gfxRenderer.renderer.colorEffectsRenderer.colorEffectsType",
    "IOCore.gfxRenderer.renderer.colorEffectsRenderer.effectsTarget1",
    "IOCore.gfxRenderer.renderer.colorEffectsRenderer.effectsTarget2",
    "IOCore.gfxRenderer.renderer.compositor.doEffects",
    "IOCore.gfxRenderer.renderer.display",
    "IOCore.gfxRenderer.renderer.displayControl",
    "IOCore.gfxRenderer.renderer.frameBuffer",
    "IOCore.gfxRenderer.renderer.greenSwap",
    "IOCore.gfxRenderer.renderer.lastUnrenderedLine",
    "IOCore.gfxRenderer.renderer.lineBuffer",
    "IOCore.gfxRenderer.renderer.mosaicRenderer.BGMosaicHSize",
    "IOCore.gfxRenderer.renderer.mosaicRenderer.BGMosaicVSize",
    "IOCore.gfxRenderer.renderer.mosaicRenderer.OBJMosaicHSize",
    "IOCore.gfxRenderer.renderer.mosaicRenderer.OBJMosaicVSize",
    "IOCore.gfxRenderer.renderer.objRenderer.cyclesToRender",
    "IOCore.gfxRenderer.renderer.objRenderer.OAMRAM",
    "IOCore.gfxRenderer.renderer.objRenderer.OAMRAM16",
    "IOCore.gfxRenderer.renderer.objRenderer.OAMRAM32",
    "IOCore.gfxRenderer.renderer.objRenderer.OAMTable",
    "IOCore.gfxRenderer.renderer.objRenderer.OBJMatrixParameters",
    "IOCore.gfxRenderer.renderer.objRenderer.scratchBuffer",
    "IOCore.gfxRenderer.renderer.objRenderer.scratchOBJBuffer",
    "IOCore.gfxRenderer.renderer.objRenderer.scratchWindowBuffer",
    "IOCore.gfxRenderer.renderer.objWindowRenderer.compositor.OBJWindowBuffer",
    "IOCore.gfxRenderer.renderer.objWindowRenderer.WINOBJOutside",
    "IOCore.gfxRenderer.renderer.palette16",
    "IOCore.gfxRenderer.renderer.palette256",
    "IOCore.gfxRenderer.renderer.paletteOBJ16",
    "IOCore.gfxRenderer.renderer.paletteOBJ256",
    "IOCore.gfxRenderer.renderer.paletteRAM",
    "IOCore.gfxRenderer.renderer.paletteRAM16",
    "IOCore.gfxRenderer.renderer.paletteRAM32",
    "IOCore.gfxRenderer.renderer.queuedScanLines",
    "IOCore.gfxRenderer.renderer.swizzledFrame",
    "IOCore.gfxRenderer.renderer.totalLinesPassed",
    "IOCore.gfxRenderer.renderer.VRAM",
    "IOCore.gfxRenderer.renderer.VRAM16",
    "IOCore.gfxRenderer.renderer.VRAM32",
    "IOCore.gfxRenderer.renderer.window0Renderer.compositor.doEffects",
    "IOCore.gfxRenderer.renderer.window0Renderer.windowDisplayControl",
    "IOCore.gfxRenderer.renderer.window0Renderer.WINXCoordLeft",
    "IOCore.gfxRenderer.renderer.window0Renderer.WINXCoordRight",
    "IOCore.gfxRenderer.renderer.window0Renderer.WINYCoordBottom",
    "IOCore.gfxRenderer.renderer.window0Renderer.WINYCoordTop",
    "IOCore.gfxRenderer.renderer.WINOutside",
    "IOCore.gfxState.currentScanLine",
    "IOCore.gfxState.IRQFlags",
    "IOCore.gfxState.LCDTicks",
    "IOCore.gfxState.renderedScanLine",
    "IOCore.gfxState.statusFlags",
    "IOCore.gfxState.VCounter",
    "IOCore.irq.interruptsEnabled",
    "IOCore.irq.interruptsRequested",
    "IOCore.joypad.keyInput",
    "IOCore.joypad.keyInterrupt",
    "IOCore.memory.BIOS",
    "IOCore.memory.BIOS16",
    "IOCore.memory.BIOS32",
    "IOCore.memory.cartridge.ROM",
    "IOCore.memory.cartridge.ROM16",
    "IOCore.memory.cartridge.ROM32",
    "IOCore.memory.cartridge.ROMLength",
    "IOCore.memory.externalRAM",
    "IOCore.memory.externalRAM16",
    "IOCore.memory.externalRAM32",
    "IOCore.memory.internalRAM",
    "IOCore.memory.internalRAM16",
    "IOCore.memory.internalRAM32",
    "IOCore.memory.irq.IME",
    "IOCore.memory.lastBIOSREAD",
    "IOCore.memory.WRAMControlFlags",
    "IOCore.nextEventClocks",
    "IOCore.ROM",
    "IOCore.saves.EEPROMChip.address",
    "IOCore.saves.EEPROMChip.bitsProcessed",
    "IOCore.saves.EEPROMChip.buffer",
    "IOCore.saves.EEPROMChip.largestSizePossible",
    "IOCore.saves.EEPROMChip.mode",
    "IOCore.saves.FLASHChip.BANKOffset",
    "IOCore.saves.FLASHChip.flashCommand",
    "IOCore.saves.FLASHChip.flashCommandUnlockStage",
    "IOCore.saves.FLASHChip.largestSizePossible",
    "IOCore.saves.FLASHChip.notATMEL",
    "IOCore.saves.FLASHChip.saves",
    "IOCore.saves.FLASHChip.writeBytesLeft",
    "IOCore.saves.GPIOChip.data",
    "IOCore.saves.GPIOChip.direction",
    "IOCore.saves.GPIOChip.readWrite",
    "IOCore.saves.GPIOChip.type",
    "IOCore.saves.saveType",
    "IOCore.saves.SRAMChip.saves",
    "IOCore.saves.SRAMChip.TILTChip",
    "IOCore.saves.SRAMChip.TILTChipUnlocked",
    "IOCore.saves.UNDETERMINED.possible",
    "IOCore.serial.JOYBUS_CNTL_FLAGS",
    "IOCore.serial.JOYBUS_IRQ",
    "IOCore.serial.JOYBUS_RECV0",
    "IOCore.serial.JOYBUS_RECV1",
    "IOCore.serial.JOYBUS_RECV2",
    "IOCore.serial.JOYBUS_RECV3",
    "IOCore.serial.JOYBUS_SEND0",
    "IOCore.serial.JOYBUS_SEND1",
    "IOCore.serial.JOYBUS_SEND2",
    "IOCore.serial.JOYBUS_SEND3",
    "IOCore.serial.JOYBUS_STAT",
    "IOCore.serial.RCNTDataBitFlow",
    "IOCore.serial.RCNTDataBits",
    "IOCore.serial.RCNTIRQ",
    "IOCore.serial.RCNTMode",
    "IOCore.serial.serialBitsShifted",
    "IOCore.serial.shiftClocks",
    "IOCore.serial.SIOBaudRate",
    "IOCore.serial.SIOCNT_IRQ",
    "IOCore.serial.SIOCNT_MODE",
    "IOCore.serial.SIOCNT_UART_CTS",
    "IOCore.serial.SIOCNT_UART_FIFO",
    "IOCore.serial.SIOCNT_UART_FIFO_ENABLE",
    "IOCore.serial.SIOCNT_UART_MISC",
    "IOCore.serial.SIOCNT_UART_PARITY_ENABLE",
    "IOCore.serial.SIOCNT_UART_RECV_ENABLE",
    "IOCore.serial.SIOCNT_UART_SEND_ENABLE",
    "IOCore.serial.SIOCNT0_DATA",
    "IOCore.serial.SIOCOMMERROR",
    "IOCore.serial.SIODATA_A",
    "IOCore.serial.SIODATA_B",
    "IOCore.serial.SIODATA_C",
    "IOCore.serial.SIODATA_D",
    "IOCore.serial.SIODATA8",
    "IOCore.serial.SIOMULT_PLAYER_NUMBER",
    "IOCore.serial.SIOShiftClockDivider",
    "IOCore.serial.SIOShiftClockExternal",
    "IOCore.serial.SIOTransferStarted",
    "IOCore.serialClocks",
    "IOCore.SKIPBoot",
    "IOCore.sound.AGBDirectSoundA",
    "IOCore.sound.AGBDirectSoundAFolded",
    "IOCore.sound.AGBDirectSoundALeftCanPlay",
    "IOCore.sound.AGBDirectSoundARightCanPlay",
    "IOCore.sound.AGBDirectSoundAShifter",
    "IOCore.sound.AGBDirectSoundATimer",
    "IOCore.sound.AGBDirectSoundB",
    "IOCore.sound.AGBDirectSoundBFolded",
    "IOCore.sound.AGBDirectSoundBLeftCanPlay",
    "IOCore.sound.AGBDirectSoundBRightCanPlay",
    "IOCore.sound.AGBDirectSoundBShifter",
    "IOCore.sound.AGBDirectSoundBTimer",
    "IOCore.sound.audioClocksUntilNextEvent",
    "IOCore.sound.audioClocksUntilNextEventCounter",
    "IOCore.sound.audioIndex",
    "IOCore.sound.audioResamplerFirstPassFactor",
    "IOCore.sound.audioTicks",
    "IOCore.sound.CGBMixerOutputCacheLeft",
    "IOCore.sound.CGBMixerOutputCacheLeftFolded",
    "IOCore.sound.CGBMixerOutputCacheRight",
    "IOCore.sound.CGBMixerOutputCacheRightFolded",
    "IOCore.sound.CGBOutputRatio",
    "IOCore.sound.channel1.CachedDuty",
    "IOCore.sound.channel1.canPlay",
    "IOCore.sound.channel1.consecutive",
    "IOCore.sound.channel1.currentSampleLeft",
    "IOCore.sound.channel1.currentSampleRight",
    "IOCore.sound.channel1.decreaseSweep",
    "IOCore.sound.channel1.DutyTracker",
    "IOCore.sound.channel1.Enabled",
    "IOCore.sound.channel1.envelopeSweeps",
    "IOCore.sound.channel1.envelopeSweepsLast",
    "IOCore.sound.channel1.envelopeVolume",
    "IOCore.sound.channel1.frequency",
    "IOCore.sound.channel1.FrequencyCounter",
    "IOCore.sound.channel1.frequencySweepDivider",
    "IOCore.sound.channel1.FrequencyTracker",
    "IOCore.sound.channel1.lastTimeSweep",
    "IOCore.sound.channel1.leftEnable",
    "IOCore.sound.channel1.nr10",
    "IOCore.sound.channel1.nr11",
    "IOCore.sound.channel1.nr12",
    "IOCore.sound.channel1.nr14",
    "IOCore.sound.channel1.rightEnable",
    "IOCore.sound.channel1.ShadowFrequency",
    "IOCore.sound.channel1.SweepFault",
    "IOCore.sound.channel1.Swept",
    "IOCore.sound.channel1.timeSweep",
    "IOCore.sound.channel1.totalLength",
    "IOCore.sound.channel2.nr21",
    "IOCore.sound.channel2.nr22",
    "IOCore.sound.channel2.nr23",
    "IOCore.sound.channel2.nr24",
    "IOCore.sound.channel2.ShadowFrequency",
    "IOCore.sound.channel3.cachedSample",
    "IOCore.sound.channel3.canPlay",
    "IOCore.sound.channel3.counter",
    "IOCore.sound.channel3.FrequencyPeriod",
    "IOCore.sound.channel3.lastSampleLookup",
    "IOCore.sound.channel3.nr30",
    "IOCore.sound.channel3.nr31",
    "IOCore.sound.channel3.nr32",
    "IOCore.sound.channel3.nr33",
    "IOCore.sound.channel3.nr34",
    "IOCore.sound.channel3.patternType",
    "IOCore.sound.channel3.PCM",
    "IOCore.sound.channel3.PCM16",
    "IOCore.sound.channel3.PCM32",
    "IOCore.sound.channel3.WAVERAM16",
    "IOCore.sound.channel3.WAVERAM32",
    "IOCore.sound.channel3.WAVERAM8",
    "IOCore.sound.channel3.WAVERAMBankAccessed",
    "IOCore.sound.channel3.WaveRAMBankSize",
    "IOCore.sound.channel3.WAVERAMBankSpecified",
    "IOCore.sound.channel4.BitRange",
    "IOCore.sound.channel4.counter",
    "IOCore.sound.channel4.currentVolume",
    "IOCore.sound.channel4.FrequencyPeriod",
    "IOCore.sound.channel4.lastSampleLookup",
    "IOCore.sound.channel4.LSFR15Table",
    "IOCore.sound.channel4.LSFR7Table",
    "IOCore.sound.channel4.noiseSampleTable",
    "IOCore.sound.channel4.nr42",
    "IOCore.sound.channel4.nr43",
    "IOCore.sound.channel4.nr44",
    "IOCore.sound.channel4.VolumeShifter",
    "IOCore.sound.downsampleInputLeft",
    "IOCore.sound.downsampleInputRight",
    "IOCore.sound.FIFOABuffer.buffer",
    "IOCore.sound.FIFOABuffer.count",
    "IOCore.sound.FIFOABuffer.position",
    "IOCore.sound.FIFOBBuffer.buffer",
    "IOCore.sound.mixerOutputCacheLeft",
    "IOCore.sound.mixerOutputCacheRight",
    "IOCore.sound.mixerSoundBIAS",
    "IOCore.sound.nr50",
    "IOCore.sound.nr51",
    "IOCore.sound.nr52",
    "IOCore.sound.nr60",
    "IOCore.sound.nr61",
    "IOCore.sound.nr62",
    "IOCore.sound.nr63",
    "IOCore.sound.PWMBitDepthMask",
    "IOCore.sound.PWMBitDepthMaskShadow",
    "IOCore.sound.PWMWidth",
    "IOCore.sound.PWMWidthOld",
    "IOCore.sound.PWMWidthShadow",
    "IOCore.sound.sequencePosition",
    "IOCore.sound.sequencerClocks",
    "IOCore.sound.soundMasterEnabled",
    "IOCore.sound.VinLeftChannelMasterVolume",
    "IOCore.sound.VinRightChannelMasterVolume",
    "IOCore.systemStatus",
    "IOCore.THUMB.decode",
    "IOCore.THUMB.execute",
    "IOCore.THUMB.fetch",
    "IOCore.timer.timer0Control",
    "IOCore.timer.timer0Counter",
    "IOCore.timer.timer0Enabled",
    "IOCore.timer.timer0IRQ",
    "IOCore.timer.timer0Precounter",
    "IOCore.timer.timer0Prescalar",
    "IOCore.timer.timer0PrescalarShifted",
    "IOCore.timer.timer0Reload",
    "IOCore.timer.timer1Control",
    "IOCore.timer.timer1Counter",
    "IOCore.timer.timer1CountUp",
    "IOCore.timer.timer1Enabled",
    "IOCore.timer.timer1IRQ",
    "IOCore.timer.timer1Precounter",
    "IOCore.timer.timer1Prescalar",
    "IOCore.timer.timer1PrescalarShifted",
    "IOCore.timer.timer1Reload",
    "IOCore.timer.timer1UseChainedClocks",
    "IOCore.timer.timer1UseMainClocks",
    "IOCore.timer.timer2Control",
    "IOCore.timer.timer2Counter",
    "IOCore.timer.timer2CountUp",
    "IOCore.timer.timer2Enabled",
    "IOCore.timer.timer2IRQ",
    "IOCore.timer.timer2Precounter",
    "IOCore.timer.timer2Prescalar",
    "IOCore.timer.timer2PrescalarShifted",
    "IOCore.timer.timer2Reload",
    "IOCore.timer.timer2UseChainedClocks",
    "IOCore.timer.timer2UseMainClocks",
    "IOCore.timer.timer3Control",
    "IOCore.timer.timer3Counter",
    "IOCore.timer.timer3CountUp",
    "IOCore.timer.timer3Enabled",
    "IOCore.timer.timer3IRQ",
    "IOCore.timer.timer3Precounter",
    "IOCore.timer.timer3Prescalar",
    "IOCore.timer.timer3PrescalarShifted",
    "IOCore.timer.timer3Reload",
    "IOCore.timer.timer3UseChainedClocks",
    "IOCore.timer.timer3UseMainClocks",
    "IOCore.timerClocks",
    "IOCore.wait.buffer",
    "IOCore.wait.clocks",
    "IOCore.wait.isOAMRendering",
    "IOCore.wait.isRendering",
    "IOCore.wait.nonSequential",
    "IOCore.wait.POSTBOOT",
    "IOCore.wait.SRAMWaitState",
    "IOCore.wait.WAITCNT0",
    "IOCore.wait.WAITCNT1",
    "IOCore.wait.waitStateClocks16",
    "IOCore.wait.waitStateClocks32",
    "IOCore.wait.WRAMConfiguration",
    "IOCore.wait.WRAMWaitState",
    "lastTimestamp",
    "metricStart",
];

/** Keys that were measured not to change over a bunch of save states. */
const unchangeStateKeys = [
    "clocksPerMilliSecond",
    "clocksPerSecond",
    "CPUCyclesPerIteration",
    "CPUCyclesTotal",
    "dynamicSpeedRefresh",
    "emulatorStatus",
    // "IOCore.accumulatedClocks",
    // "IOCore.cartridge.EEPROMStart",
    // "IOCore.cartridge.flash_is128",
    // "IOCore.cartridge.flash_isAtmel",
    // "IOCore.cartridge.name",
    // "IOCore.cpu.registersABT",
    // "IOCore.cpu.registersFIQ",
    // "IOCore.cpu.registersUND",
    // "IOCore.cpu.triggeredIRQ",
    // "IOCore.dma.currentMatch",
    // "IOCore.dmaChannel0.destinationControl",
    // "IOCore.dmaChannel0.dmaType",
    // "IOCore.dmaChannel0.enabled",
    // "IOCore.dmaChannel0.irqFlagging",
    // "IOCore.dmaChannel0.is32Bit",
    // "IOCore.dmaChannel0.pending",
    // "IOCore.dmaChannel0.repeat",
    // "IOCore.dmaChannel0.sourceControl",
    // "IOCore.dmaChannel1.destination",
    // "IOCore.dmaChannel1.destinationShadow",
    // "IOCore.dmaChannel1.dmaType",
    // "IOCore.dmaChannel1.enabled",
    // "IOCore.dmaChannel1.is32Bit",
    // "IOCore.dmaChannel1.repeat",
    // "IOCore.dmaChannel1.source",
    // "IOCore.dmaChannel1.wordCount",
    // "IOCore.dmaChannel1.wordCountShadow",
    // "IOCore.dmaChannel2.destination",
    // "IOCore.dmaChannel2.destinationShadow",
    // "IOCore.dmaChannel2.enabled",
    // "IOCore.dmaChannel2.source",
    // "IOCore.dmaChannel3.destination",
    // "IOCore.dmaChannel3.destinationShadow",
    // "IOCore.dmaChannel3.displaySyncEnableDelay",
    // "IOCore.dmaChannel3.gamePakDMA",
    // "IOCore.dmaChannel3.source",
    // "IOCore.dmaChannel3.sourceControl",
    // "IOCore.dmaChannel3.sourceShadow",
    // "IOCore.dmaChannel3.wordCount",
    // "IOCore.gfxRenderer.renderer.backdrop",
    // "IOCore.gfxRenderer.renderer.bg0Renderer.BGCharacterBaseBlock",
    // "IOCore.gfxRenderer.renderer.bg0Renderer.BGLayer",
    // "IOCore.gfxRenderer.renderer.bg0Renderer.do256",
    // "IOCore.gfxRenderer.renderer.bg0Renderer.doMosaic",
    // "IOCore.gfxRenderer.renderer.bg0Renderer.offset",
    // "IOCore.gfxRenderer.renderer.bg0Renderer.tileMode",
    // "IOCore.gfxRenderer.renderer.bg1Renderer.BGLayer",
    // "IOCore.gfxRenderer.renderer.bg1Renderer.offset",
    // "IOCore.gfxRenderer.renderer.bg2FrameBufferRenderer.frameSelect",
    // "IOCore.gfxRenderer.renderer.bg2MatrixRenderer.BGCharacterBaseBlock",
    // "IOCore.gfxRenderer.renderer.bg2MatrixRenderer.BGDisplayOverflow",
    // "IOCore.gfxRenderer.renderer.bg2TextRenderer.BGCharacterBaseBlock",
    // "IOCore.gfxRenderer.renderer.bg2TextRenderer.BGLayer",
    // "IOCore.gfxRenderer.renderer.bg2TextRenderer.offset",
    // "IOCore.gfxRenderer.renderer.bg2TextRenderer.tileFetched",
    // "IOCore.gfxRenderer.renderer.bg3TextRenderer.BGLayer",
    // "IOCore.gfxRenderer.renderer.bg3TextRenderer.offset",
    // "IOCore.gfxRenderer.renderer.bgAffineRenderer1.BGdmy",
    // "IOCore.gfxRenderer.renderer.bgAffineRenderer1.BGdx",
    // "IOCore.gfxRenderer.renderer.bgAffineRenderer1.BGReferenceX",
    // "IOCore.gfxRenderer.renderer.bgAffineRenderer1.BGReferenceY",
    // "IOCore.gfxRenderer.renderer.bgAffineRenderer1.pb",
    // "IOCore.gfxRenderer.renderer.bgAffineRenderer1.pd",
    // "IOCore.gfxRenderer.renderer.greenSwap",
    // "IOCore.gfxRenderer.renderer.lastUnrenderedLine",
    // "IOCore.gfxRenderer.renderer.mosaicRenderer.BGMosaicHSize",
    // "IOCore.gfxRenderer.renderer.mosaicRenderer.BGMosaicVSize",
    // "IOCore.gfxRenderer.renderer.mosaicRenderer.OBJMosaicHSize",
    // "IOCore.gfxRenderer.renderer.mosaicRenderer.OBJMosaicVSize",
    // "IOCore.gfxRenderer.renderer.objRenderer.cyclesToRender",
    // "IOCore.gfxRenderer.renderer.objRenderer.OAMTable",
    // "IOCore.gfxRenderer.renderer.objRenderer.scratchWindowBuffer",
    // "IOCore.gfxRenderer.renderer.objWindowRenderer.compositor.OBJWindowBuffer",
    // "IOCore.gfxRenderer.renderer.totalLinesPassed",
    // "IOCore.gfxState.VCounter",
    // "IOCore.joypad.keyInput",
    // "IOCore.joypad.keyInterrupt",
    "IOCore.memory.BIOS",
    "IOCore.memory.BIOS16",
    "IOCore.memory.BIOS32",
    "IOCore.memory.cartridge.ROM",
    "IOCore.memory.cartridge.ROM16",
    "IOCore.memory.cartridge.ROM32",
    "IOCore.memory.cartridge.ROMLength",
    // "IOCore.memory.irq.IME",
    // "IOCore.memory.WRAMControlFlags",
    // "IOCore.nextEventClocks",
    "IOCore.ROM",
    // "IOCore.saves.EEPROMChip.address",
    // "IOCore.saves.EEPROMChip.bitsProcessed",
    // "IOCore.saves.EEPROMChip.buffer",
    // "IOCore.saves.EEPROMChip.largestSizePossible",
    // "IOCore.saves.EEPROMChip.mode",
    "IOCore.saves.FLASHChip.BANKOffset",
    "IOCore.saves.FLASHChip.flashCommand",
    "IOCore.saves.FLASHChip.flashCommandUnlockStage",
    "IOCore.saves.FLASHChip.largestSizePossible",
    "IOCore.saves.FLASHChip.notATMEL",
    "IOCore.saves.FLASHChip.saves",
    "IOCore.saves.FLASHChip.writeBytesLeft",
    // "IOCore.saves.GPIOChip.data",
    // "IOCore.saves.GPIOChip.direction",
    // "IOCore.saves.GPIOChip.readWrite",
    // "IOCore.saves.GPIOChip.type",
    // "IOCore.saves.saveType",
    "IOCore.saves.SRAMChip.saves",
    "IOCore.saves.SRAMChip.TILTChip",
    "IOCore.saves.SRAMChip.TILTChipUnlocked",
    // "IOCore.saves.UNDETERMINED.possible",
    // "IOCore.serial.JOYBUS_CNTL_FLAGS",
    // "IOCore.serial.JOYBUS_IRQ",
    // "IOCore.serial.JOYBUS_RECV0",
    // "IOCore.serial.JOYBUS_RECV1",
    // "IOCore.serial.JOYBUS_RECV2",
    // "IOCore.serial.JOYBUS_RECV3",
    // "IOCore.serial.JOYBUS_SEND0",
    // "IOCore.serial.JOYBUS_SEND1",
    // "IOCore.serial.JOYBUS_SEND2",
    // "IOCore.serial.JOYBUS_SEND3",
    // "IOCore.serial.JOYBUS_STAT",
    // "IOCore.serial.RCNTDataBitFlow",
    // "IOCore.serial.RCNTDataBits",
    // "IOCore.serial.RCNTIRQ",
    // "IOCore.serial.RCNTMode",
    // "IOCore.serial.serialBitsShifted",
    // "IOCore.serial.shiftClocks",
    // "IOCore.serial.SIOBaudRate",
    // "IOCore.serial.SIOCNT_IRQ",
    // "IOCore.serial.SIOCNT_MODE",
    // "IOCore.serial.SIOCNT_UART_CTS",
    // "IOCore.serial.SIOCNT_UART_FIFO",
    // "IOCore.serial.SIOCNT_UART_FIFO_ENABLE",
    // "IOCore.serial.SIOCNT_UART_MISC",
    // "IOCore.serial.SIOCNT_UART_PARITY_ENABLE",
    // "IOCore.serial.SIOCNT_UART_RECV_ENABLE",
    // "IOCore.serial.SIOCNT_UART_SEND_ENABLE",
    // "IOCore.serial.SIOCNT0_DATA",
    // "IOCore.serial.SIOCOMMERROR",
    // "IOCore.serial.SIODATA_A",
    // "IOCore.serial.SIODATA_B",
    // "IOCore.serial.SIODATA_C",
    // "IOCore.serial.SIODATA_D",
    // "IOCore.serial.SIODATA8",
    // "IOCore.serial.SIOMULT_PLAYER_NUMBER",
    // "IOCore.serial.SIOShiftClockDivider",
    // "IOCore.serial.SIOShiftClockExternal",
    // "IOCore.serial.SIOTransferStarted",
    // "IOCore.serialClocks",
    "IOCore.SKIPBoot",
    // "IOCore.sound.AGBDirectSoundALeftCanPlay",
    // "IOCore.sound.AGBDirectSoundARightCanPlay",
    // "IOCore.sound.AGBDirectSoundAShifter",
    // "IOCore.sound.AGBDirectSoundATimer",
    // "IOCore.sound.AGBDirectSoundBLeftCanPlay",
    // "IOCore.sound.AGBDirectSoundBRightCanPlay",
    // "IOCore.sound.AGBDirectSoundBShifter",
    // "IOCore.sound.AGBDirectSoundBTimer",
    // "IOCore.sound.audioClocksUntilNextEvent",
    // "IOCore.sound.audioResamplerFirstPassFactor",
    // "IOCore.sound.audioTicks",
    // "IOCore.sound.CGBOutputRatio",
    // "IOCore.sound.channel1.canPlay",
    // "IOCore.sound.channel1.consecutive",
    // "IOCore.sound.channel1.Enabled",
    // "IOCore.sound.channel1.envelopeSweeps",
    // "IOCore.sound.channel1.envelopeSweepsLast",
    // "IOCore.sound.channel1.frequencySweepDivider",
    // "IOCore.sound.channel1.lastTimeSweep",
    // "IOCore.sound.channel1.SweepFault",
    // "IOCore.sound.channel1.Swept",
    // "IOCore.sound.channel1.timeSweep",
    // "IOCore.sound.channel2.nr21",
    // "IOCore.sound.channel2.nr22",
    // "IOCore.sound.channel2.nr23",
    // "IOCore.sound.channel2.nr24",
    // "IOCore.sound.channel2.ShadowFrequency",
    // "IOCore.sound.channel3.cachedSample",
    // "IOCore.sound.channel3.canPlay",
    // "IOCore.sound.channel3.FrequencyPeriod",
    // "IOCore.sound.channel3.lastSampleLookup",
    // "IOCore.sound.channel3.nr30",
    // "IOCore.sound.channel3.nr31",
    // "IOCore.sound.channel3.nr32",
    // "IOCore.sound.channel3.nr33",
    // "IOCore.sound.channel3.nr34",
    // "IOCore.sound.channel3.patternType",
    // "IOCore.sound.channel3.PCM",
    // "IOCore.sound.channel3.PCM16",
    // "IOCore.sound.channel3.PCM32",
    // "IOCore.sound.channel3.WAVERAM16",
    // "IOCore.sound.channel3.WAVERAM32",
    // "IOCore.sound.channel3.WAVERAM8",
    // "IOCore.sound.channel3.WAVERAMBankAccessed",
    // "IOCore.sound.channel3.WaveRAMBankSize",
    // "IOCore.sound.channel3.WAVERAMBankSpecified",
    // "IOCore.sound.channel4.BitRange",
    // "IOCore.sound.channel4.counter",
    // "IOCore.sound.channel4.currentVolume",
    // "IOCore.sound.channel4.FrequencyPeriod",
    // "IOCore.sound.channel4.LSFR15Table",
    // "IOCore.sound.channel4.LSFR7Table",
    // "IOCore.sound.channel4.noiseSampleTable",
    // "IOCore.sound.channel4.nr42",
    // "IOCore.sound.channel4.nr43",
    // "IOCore.sound.channel4.nr44",
    // "IOCore.sound.channel4.VolumeShifter",
    // "IOCore.sound.mixerSoundBIAS",
    // "IOCore.sound.nr50",
    // "IOCore.sound.nr52",
    // "IOCore.sound.nr60",
    // "IOCore.sound.nr61",
    // "IOCore.sound.nr62",
    // "IOCore.sound.nr63",
    // "IOCore.sound.PWMBitDepthMask",
    // "IOCore.sound.PWMBitDepthMaskShadow",
    // "IOCore.sound.PWMWidthOld",
    // "IOCore.sound.PWMWidthShadow",
    // "IOCore.sound.soundMasterEnabled",
    // "IOCore.sound.VinLeftChannelMasterVolume",
    // "IOCore.sound.VinRightChannelMasterVolume",
    // "IOCore.timer.timer0Control",
    // "IOCore.timer.timer0Enabled",
    // "IOCore.timer.timer0IRQ",
    // "IOCore.timer.timer0Precounter",
    // "IOCore.timer.timer0Prescalar",
    // "IOCore.timer.timer0PrescalarShifted",
    // "IOCore.timer.timer0Reload",
    // "IOCore.timer.timer1Control",
    // "IOCore.timer.timer1Counter",
    // "IOCore.timer.timer1CountUp",
    // "IOCore.timer.timer1Enabled",
    // "IOCore.timer.timer1IRQ",
    // "IOCore.timer.timer1Precounter",
    // "IOCore.timer.timer1Prescalar",
    // "IOCore.timer.timer1PrescalarShifted",
    // "IOCore.timer.timer1Reload",
    // "IOCore.timer.timer1UseChainedClocks",
    // "IOCore.timer.timer1UseMainClocks",
    // "IOCore.timer.timer2Control",
    // "IOCore.timer.timer2Counter",
    // "IOCore.timer.timer2CountUp",
    // "IOCore.timer.timer2Enabled",
    // "IOCore.timer.timer2IRQ",
    // "IOCore.timer.timer2Precounter",
    // "IOCore.timer.timer2Prescalar",
    // "IOCore.timer.timer2PrescalarShifted",
    // "IOCore.timer.timer2Reload",
    // "IOCore.timer.timer2UseChainedClocks",
    // "IOCore.timer.timer2UseMainClocks",
    // "IOCore.timer.timer3Control",
    // "IOCore.timer.timer3Counter",
    // "IOCore.timer.timer3CountUp",
    // "IOCore.timer.timer3Enabled",
    // "IOCore.timer.timer3IRQ",
    // "IOCore.timer.timer3Precounter",
    // "IOCore.timer.timer3Prescalar",
    // "IOCore.timer.timer3PrescalarShifted",
    // "IOCore.timer.timer3Reload",
    // "IOCore.timer.timer3UseChainedClocks",
    // "IOCore.timer.timer3UseMainClocks",
    // "IOCore.timerClocks",
    // "IOCore.wait.POSTBOOT",
    // "IOCore.wait.SRAMWaitState",
    // "IOCore.wait.WAITCNT0",
    // "IOCore.wait.WAITCNT1",
    // "IOCore.wait.waitStateClocks16",
    // "IOCore.wait.waitStateClocks32",
    // "IOCore.wait.WRAMConfiguration",
    // "IOCore.wait.WRAMWaitState",
];

let saveStateKeys = uniqueStateKeys
    .filter(key => !unchangeStateKeys.includes(key));

function withEmulatorPaused(fn) {
    const iodine = IodineGUI.Iodine;

    const previousStatus = iodine.emulatorStatus;
    iodine.emulatorStatus = 21;

    fn();

    iodine.emulatorStatus = previousStatus;
}

function fastLoad(fastSaveState) {
    function write(object, key, value) {
        const valueType = typeof value;
        switch (valueType) {
            case "object":
                if (value === null) {
                    object[key] = null;
                } else if (Array.isArray(value)) {
                    object[key].splice(value.length);
                    for (let i = 0; i < value.length; i++) {
                        object[key][i] = value[i];
                    }
                } else if (ArrayBuffer.isView(value)) {
                    for (let i = 0; i < value.length; i++) {
                        object[key][i] = value[i];
                    }
                } else {
                    for (let i of value) {
                        object[key][i] = value[i];
                    }
                }
                break;
            case "boolean":
                object[key] = value;
            case "number":
                object[key] = value;
                break;
            case "string":
                object[key] = value;
                break;
            case "function":
                break;
            default:
                throw new Error(`Unhandled type: '${valueType}' - key: '${key}' - object: ${object}`);
        }
    }
    const iodine = IodineGUI.Iodine;

    withEmulatorPaused(() => {
        for (key of saveStateKeys) {
            const parts = key.split('.');
            const lastPart = parts.splice(parts.length - 1)[0];
            let object = iodine;
            for (part of parts) {
                object = object[part];
            }

            write(object, lastPart, fastSaveState[key]);
        }
    }
    );
}

function fastSave() {
    function read(value, key, state) {
        const valueType = typeof value;
        switch (valueType) {
            case "object":
                if (value === null) {
                    state[key] = null;
                } else if (Array.isArray(value)) {
                    state[key] = value.slice();
                } else if (ArrayBuffer.isView(value)) {
                    state[key] = value.slice();
                } else {
                    throw new Error(`Non-Leaf Node: '${valueType}' - key: '${key}' - value: ${value}`);
                }
                break;
            case "boolean":
                state[key] = value;
            case "number":
                state[key] = value;
                break;
            case "string":
                state[key] = value;
                break;
            case "function":
                break;
            default:
                throw new Error(`Unhandled type: '${valueType}' - key: '${key}' - value: ${value}`);
        }
    }
    const iodine = IodineGUI.Iodine;
    let state = {};

    withEmulatorPaused(() => {
        for (key of saveStateKeys) {
            const parts = key.split('.');
            const lastPart = parts.splice(parts.length - 1)[0];
            let object = iodine;
            for (part of parts) {
                object = object[part];
            }

            read(object[lastPart], key, state);
        }
    });

    return state;
}

function importSaveState(blob) {
    fastLoad(IodineGUI.Iodine.SaveStates.snapshotter.deserialize_from_b64(blob));
}

function exportSaveState(blob) {
    return IodineGUI.Iodine.SaveStates.snapshotter.serialize_to_b64(blob);
}

